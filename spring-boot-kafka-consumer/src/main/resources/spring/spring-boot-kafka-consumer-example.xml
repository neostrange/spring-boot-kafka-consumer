<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.2.xsd">



	<context:property-placeholder location="classpath:/application.properties" />
	<context:component-scan base-package="com.example" />


	<int:channel id="inputFromKafka">
		<int:queue />
	</int:channel>

	<int:service-activator input-channel="inputFromKafka"
		ref="messageProcessor">
		<int:poller fixed-rate="500" task-executor="task-executor" />
	</int:service-activator>

	<task:executor id="task-executor" pool-size="10" />
	<bean id="messageProcessor" class="com.example.MessageProcessor" />



	<bean id="consumerProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="auto.offset.reset">smallest</prop>
				<prop key="socket.receive.buffer.bytes">10485760</prop> <!-- 10M -->
				<prop key="fetch.message.max.bytes">5242880</prop>
				<prop key="auto.commit.interval.ms">1000</prop>
			</props>
		</property>
	</bean>


	<int-kafka:zookeeper-connect id="zookeeperConnect"
		zk-connect="localhost:2181" zk-connection-timeout="6000"
		zk-session-timeout="6000" zk-sync-time="2000" />


	<bean id="kafkaThreadListener" class="com.example.KafkaConsumerStarter"
		init-method="initIt" destroy-method="cleanUp" />

	<int-kafka:inbound-channel-adapter
		kafka-consumer-context-ref="consumerContext" auto-startup="false"
		channel="inputFromKafka" id="kafka-inbound-channel-adapter">
		<int:poller fixed-delay="1000" time-unit="MILLISECONDS"
			receive-timeout="0" />

	</int-kafka:inbound-channel-adapter>

	<!-- Consumer -->
	<bean id="voteDecoder"
		class="org.springframework.integration.kafka.serializer.common.StringDecoder">
		<!-- <constructor-arg value="" /> -->
	</bean>

	<int-kafka:consumer-context id="consumerContext"
		consumer-timeout="4000" zookeeper-connect="zookeeperConnect"
		consumer-properties="consumerProperties">
		<int-kafka:consumer-configurations>
			<int-kafka:consumer-configuration
				group-id="default" max-messages="500" value-decoder="voteDecoder">
				<int-kafka:topic id="${topic}" streams="1" />
			</int-kafka:consumer-configuration>
		</int-kafka:consumer-configurations>
	</int-kafka:consumer-context>



	<!-- redis connection factory -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="localhost" p:port="6379" />
	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />



	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />

</beans>
